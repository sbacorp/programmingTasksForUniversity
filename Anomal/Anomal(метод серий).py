from typing import List

def main():
    # Создание списка данных
    data = [9, 9, 4, 3, 7, 6, 5, 8]

    # Сортировка данных
    data.sort()

    # Расчет числа серий в ряде
    seris = count_seris(data)
    print(seris)
    # Расчет ожидаемого числа серий
    expected_seris = 1 + (2 * len(data) - 1) / 3.
    print(expected_seris)

    # Вывод результата теста
    if seris > expected_seris:
        print("Серийность ряда является неслучайной")
    else:
        print("Серийность ряда является случайной")


def count_seris(data: List[int]) -> int:
    # Получение длины списка данных
    n = len(data)
    # Инициализация счетчика серий
    count = 1
    # Подсчет серий в ряде
    for i in range(n - 1):
        if data[i] < data[i + 1]:
            count += 1
    return count

if __name__ == "__main__":
    main()

    
# Этот код выполняет следующие действия:

# Создает список данных.
# Сортирует список данных по возрастанию.
# Рассчитывает число серий в ряде. Серия - это последовательность возрастающих значений в ряде. Функция count_seris подсчитывает количество серий в отсортированном списке данных.
# Рассчитывает ожидаемое число серий на основе формулы: 1 + (2 * n - 1) / 3, где n - количество элементов в ряде. Это ожидаемое число серий в случайном ряде.
# Сравнивает рассчитанное число серий с ожидаемым числом серий. Если рассчитанное число серий больше ожидаемого, то выводится сообщение о том, что серийность ряда является неслучайной. В противном случае выводится сообщение о том, что серийность ряда является случайной.
# Код используется для проверки случайности ряда данных на основе подсчета числа серий. Если число серий в ряде значительно превышает ожидаемое число серий для случайного ряда, это может указывать на наличие структуры или зависимостей в данных.