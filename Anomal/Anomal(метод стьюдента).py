import numpy as np

def main():
    # Создание массива данных
    data = np.array([2.0, 3.0, 4.0, 5.0, 70.0, 6.0, 7.0, 8.0, 9.0, 10.0])

    # Вычисление среднего значения массива данных
    mean = get_mean(data)
    # Вычисление стандартного отклонения массива данных
    std_dev = get_std_dev(data, mean)
    # Вычисление нижней границы интервала
    lower_bound = mean - 2 * std_dev
    # Вычисление верхней границы интервала
    upper_bound = mean + 2 * std_dev

    # Замена выбросов средним значением массива данных
    for i in range(len(data)):
        if data[i] < lower_bound or data[i] > upper_bound:
            data[i] = mean

    # Вывод обработанного массива данных
    print(data)

def get_mean(data: np.ndarray) -> float:
    # Вычисление среднего значения массива данных
    return np.mean(data)

def get_std_dev(data: np.ndarray, mean: float) -> float:
    # Вычисление стандартного отклонения массива данных
    return np.std(data)

if __name__ == "__main__":
    main()
 
#  Этот код выполняет следующие действия:

# Создает массив данных с заданными значениями.
# Вычисляет среднее значение массива данных.
# Вычисляет стандартное отклонение массива данных.
# Определяет нижнюю и верхнюю границы интервала на основе среднего значения и стандартного отклонения. В данном случае интервал охватывает примерно 95% всех значений, если распределение данных близко к нормальному.
# Заменяет все значения массива данных, которые выходят за пределы заданного интервала, средним значением.
# Выводит обработанный массив данных.
# Код используется для обработки массива данных путем удаления выбросов (значений, которые значительно отличаются от большинства других значений) и замены их средним значением. Это может быть полезно при предварительной обработке данных перед анализом или использованием в алгоритмах машинного обучения